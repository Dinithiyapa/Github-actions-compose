name: Build, Push Docker Compose Services, and Update Linode Server

on:
  push:
    branches:
      - '**'  # Trigger the workflow on pushes to any branch

jobs:
  build-web:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push web image
        run: |
          docker compose build web
          docker compose push web

  build-api:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push API image
        run: |
          docker compose build api
          docker compose push api

  update-linode:
    name: Update Linode Server
    needs:
      - build-web
      - build-api
    runs-on: ubuntu-latest
    steps:
      - name: Execute remote SSH commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            # Check if Docker is installed, and install if missing
            if ! command -v docker > /dev/null 2>&1; then
              echo "Docker not found. Installing..."
              sudo apt-get update
              sudo apt-get install -y ca-certificates curl gnupg
              sudo install -m 0755 -d /etc/apt/keyrings
              curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
              sudo chmod a+r /etc/apt/keyrings/docker.gpg
              echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
              sudo apt-get update
              sudo apt-get install -y docker-ce docker-ce-cli containerd.io
            else
              echo "Docker is already installed."
            fi

            # Check if Docker Compose is installed, and install if missing
            if ! docker compose version > /dev/null 2>&1; then
              echo "Docker Compose not found. Installing..."
              mkdir -p ~/.docker/cli-plugins/
              curl -SL https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
              chmod +x ~/.docker/cli-plugins/docker-compose
              docker compose version
            else
              echo "Docker Compose is already installed."
            fi

            # Step 2: Verify the deployment directory exists
            DEPLOYMENT_DIR="/path/to/your/deployment"
            if [ -d "$DEPLOYMENT_DIR" ]; then
              echo "Directory found: $DEPLOYMENT_DIR"
              cd $DEPLOYMENT_DIR
              docker compose pull
              docker compose up -d --remove-orphans
            else
              echo "Deployment directory not found. Exiting."
              exit 1
            fi
