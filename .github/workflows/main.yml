name: Build, Push Docker Compose Services, and Update Linode Server

on:
  push:
    branches:
      - '**'  # Trigger the workflow on pushes to any branch

jobs:
  build-web:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and Push the Web Service
      - name: Build and push web image
        run: |
          docker compose build web
          docker compose push web

  build-api:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Check out the repository
        uses: actions/checkout@v3

      # Step 2: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 3: Build and Push the API Service
      - name: Build and push API image
        run: |
          docker compose build api
          docker compose push api

  update-linode:
    name: Update Linode Server
    needs:
      - build-web
      - build-api
    runs-on: ubuntu-latest
    steps:
      # Step 1: Install Docker Compose on the Linode server
      - name: Install Docker Compose on Linode server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            # Install Docker Compose if not installed
            if ! command -v docker-compose &> /dev/null
            then
              echo "Docker Compose not found. Installing..."
              curl -L https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-$(uname -s)-$(uname -m) -o /usr/local/bin/docker-compose
              chmod +x /usr/local/bin/docker-compose
              docker-compose --version
            else
              echo "Docker Compose is already installed."
            fi

      # Step 2: Execute remote SSH commands to update the server
      - name: Execute remote SSH commands
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          port: ${{ secrets.PORT }}
          script: |
            # Verify the correct path to your deployment directory
            if [ -d "/path/to/your/deployment" ]; then
              cd /path/to/your/deployment
              # Pull the latest Docker images
              docker compose pull
              # Restart services with the updated configuration
              docker compose up -d --remove-orphans
            else
              echo "Deployment directory not found. Exiting."
              exit 1
            fi
